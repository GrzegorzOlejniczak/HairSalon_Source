@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var user = await UserManager.GetUserAsync(User);

    var profilePicturePath = user?.ProfilePicturePath;
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        @* <a class="btn profile-button" asp-area="Identity" asp-page="/Account/Manage/ChangePassword">
            <img src="~/images/blank_profile.png" alt="Profile" />
        </a> *@
            <a class="btn profile-button" asp-area="Identity" asp-page="/Account/Manage/Index">


                <img asp-area="Identity" asp-page="/Account/Manage/Index" src="@(string.IsNullOrEmpty(profilePicturePath) ? "/images/blank_profile.png" : profilePicturePath)" alt="Profile" />
                
            </a>
    </li>

    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="btn btn-primary">Wyloguj się</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="btn" asp-area="Identity" asp-page="/Account/Login">Zaloguj się</a>
    </li>
    <li class="nav-item">
            <a class="btn btn-primary fw-medium" asp-area="Identity" asp-page="/Account/Register">Zarejestruj się</a>
    </li>
}
</ul>


@* <a class="btn profile-button" asp-area="Identity" asp-page="/Account/ProfileSettings">
    <img src="~/images/blank_profile.png" alt="Profile" />
</a>
<form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" class="d-inline">
    <button type="submit" class="btn btn-outline-dark">Wyloguj się</button>
</form> *@